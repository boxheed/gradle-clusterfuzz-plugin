buildscript {
    repositories {
        mavenLocal()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            url = "https://artifacts.fizzpod.com/public/mvn/"
        }
    }
    dependencies {
        classpath ('com.fizzpod:gradle-plugin-opinion:24.0.1')  {
            exclude group: 'com.fizzpod', module: 'gradle-clusterfuzz-plugin'
        }
    }
}

apply plugin: 'com.fizzpod.pater-build'
apply plugin: 'com.fizzpod.clusterfuzz'

sourceSets {
    main {
        java {
            srcDir 'buildSrc/src/main/java'
        }
        resources {
            srcDir 'buildSrc/src/main/resources'
            exclude 'META-INF/gradle-plugins/com.fizzpod.clusterfuzz.properties'
        }
        groovy {
            srcDir 'buildSrc/src/main/groovy'
        }
    }
    test {
        java {
            srcDir 'buildSrc/src/test/java'
        }
        resources {
            srcDir 'buildSrc/src/test/resources'
        }
        groovy {
            srcDir 'buildSrc/src/test/groovy'
        }
    }
}


dependencies {
    api gradleApi()
    api localGroovy()
    
    implementation 'commons-io:commons-io:2.19.0'

    clusterfuzzImplementation 'com.code-intelligence:jazzer-api:0.24.0'
    testImplementation 'com.netflix.nebula:nebula-test:10.6.2'

}

clusterfuzz {
    config {
        options = ["--instrumentation_includes":"com.fizzpod.**","-runs": "200"]
        corpus = ".*"
    }
    "ClusterfuzzPluginExtensionFuzzTest" {
        options = ["--instrumentation_includes": "com.fizzpod.gradle.**"]
    }
    "ClusterfuzzPlugin.*" {
        options = ["-runs": "300"]
    }
}

gradlePlugin {
    plugins {
        plugin {
            description = 'Gradle plugin providing default configurations for testing with ClusterFuzz.'
            tags.set(['test', 'clusterfuzz', 'jvm', 'Jazzer'])
            id = 'com.fizzpod.clusterfuzz'
            displayName = 'Gradle Clusterfuzz plugin'
            implementationClass = 'com.fizzpod.gradle.plugins.clusterfuzz.ClusterfuzzPlugin'
        }
    }
}



test {
    finalizedBy jacocoTestReport
}