buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://artifacts.fizzpod.com/public/mvn/"
        }
    }
    dependencies {
        classpath ('com.fizzpod:gradle-plugin-opinion:14.1.0') 
    }
}

apply plugin: 'com.fizzpod.pater-build'
apply plugin: 'com.fizzpod.clusterfuzz'

sourceSets {
    main {
        java {
            srcDir 'buildSrc/src/main/java'
        }
        resources {
            srcDir 'buildSrc/src/main/resources'
            exclude 'META-INF/gradle-plugins/com.fizzpod.clusterfuzz.properties'
        }
        groovy {
            srcDir 'buildSrc/src/main/groovy'
        }
    }
    test {
        java {
            srcDir 'buildSrc/src/test/java'
        }
        resources {
            srcDir 'buildSrc/src/test/resources'
        }
        groovy {
            srcDir 'buildSrc/src/test/groovy'
        }
    }
}


dependencies {
    api gradleApi()
    api localGroovy()
    
    implementation 'commons-io:commons-io:2.11.0'

    clusterfuzzImplementation 'com.code-intelligence:jazzer-api:0.12.0'

}

clusterfuzz {
    config {
        options = ["--instrumentation_includes":"com.fizzpod.**","-runs": "200"]
        
    }

}


pluginBundle {

  description = 'Gradle plugin providing default configurations for testing with ClusterFuzz.'
  tags = ['test', 'clusterfuzz', 'jvm', 'Jazzer']
}

gradlePlugin {
    plugins {
        plugin {
            id = 'com.fizzpod.clusterfuzz'
            displayName = 'Gradle Clusterfuzz plugin'
            implementationClass = 'com.fizzpod.gradle.plugins.clusterfuzz.ClusterfuzzPlugin'
        }
    }
}


task printSourceSetInformation(){

    doLast{
        sourceSets.each { srcSet ->
            println "["+srcSet.name+"]"
            print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
            print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
            print "-->Compile classpath:\n"
            srcSet.compileClasspath.files.each { 
                print "  "+it.path+"\n"
            }
            println ""
        }
    }
}
